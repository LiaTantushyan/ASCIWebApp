using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Xml.Linq;
using ASCIWebApp.Data;
using ASCIWebApp.Helpers;
using ASCIWebApp.Models;
using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;

namespace ASCIWebApp.Services
{
    public class XmlService : IXmlService
    {
        private readonly IACSDbContext _db;
        private readonly IWebHostEnvironment _webHostEnvironment;
        public XmlService(IACSDbContext db, IWebHostEnvironment webHostEnvironment)
        {
            _db = db;
            _webHostEnvironment = webHostEnvironment;
        }
        public string GetFilePath(IFormFile formFile)
        {
            var filePath = Path.GetTempFileName();

            using (var stream = System.IO.File.Create(filePath))
            {
                // The formFile is the method parameter which type is IFormFile
                // Saves the files to the local file system using a file name generated by the app.
                 formFile.CopyToAsync(stream);
            }
            return filePath;
        }
        public List<string> GetDataFromXmlAsync(IFormFile file)
        {
            var path= GetFilePath(file);
            List<string> datalist=new List<string>();
            XElement root = XElement.Load(path);
            //urn:cba-am:ed:v1.0
            XNamespace ed = "urn:cba-am:ed:v1.0";

            //IEnumerable<string> partNos = from item in purchaseOrder.Descendants("Depositor")
            //                              select (string)item.Element("SurName");

            IEnumerable<string> tags = from tag in root.Descendants(ed + ("PassportNum"+"SocCardNum")).ToList()
                                       select (string)tag;
            var allElementNames = root.Descendants("IACS").Select(el=>(el.Element("SocCardNum").Value ,el.Element("PassportNum").Value)).ToString();
            foreach (var item in allElementNames)
            {
                datalist.Add(item.ToString());
            }
            return datalist;
        }
    }
}

